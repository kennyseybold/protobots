import edu.wpi.first.gradlerio.GradleRIOPlugin
import edu.wpi.first.gradlerio.frc.FRCJavaArtifact
import edu.wpi.first.gradlerio.frc.RoboRIO

buildscript {
    ext {
        kotlin_version = "1.2.61"
        dagger_version = "2.17"
        thirdcoast_version = "18.6.0"
        moshi_version = "1.6.0"
    }

    repositories {
        jcenter()
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "gradle.plugin.edu.wpi.first:GradleRIO:2019.0.0-alpha-3"
    }
}

apply plugin: "kotlin"
apply plugin: "kotlin-kapt"
apply plugin: "idea"
apply plugin: "edu.wpi.first.GradleRIO"

def TEAM = 2767
def ROBOT_CLASS = "org.strykeforce.Jif"

repositories {
    jcenter()
    maven { url = "https://oss.sonatype.org/content/repositories/snapshots" } // nanohttpd
    mavenLocal()
}

wpi {
  ctreVersion = "5.7.1.0"
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    compile wpilib()
    compile ctre()
    compile navx()
    compile "org.strykeforce.thirdcoast:core:$thirdcoast_version"
    compile "org.strykeforce.thirdcoast:telemetry:$thirdcoast_version"

    compile "io.github.microutils:kotlin-logging:1.5.9"
    compile "ch.qos.logback:logback-classic:1.2.3"

    compile "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    compileOnly "com.google.code.findbugs:jsr305:3.0.2"

    compile "com.squareup.moshi:moshi:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    compile "com.github.kittinunf.fuel:fuel:1.15.0"

}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

def robotManifest = {
    attributes "Main-Class": "edu.wpi.first.wpilibj.RobotBase"
    attributes "Robot-Class": frc.robotClass
}

jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest GradleRIOPlugin.javaManifest(ROBOT_CLASS)
}

deploy {
    targets {
        target("roborio", RoboRIO) {
            team = TEAM
        }
    }
    artifacts {
        artifact("frcJava", FRCJavaArtifact) {
            targets << "roborio"
        }
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
        sourceDirs += files('build/generated/source/kapt/main', 'build/generated/source/kaptKotlin/main')
        generatedSourceDirs += files('build/generated/source/kapt/main', 'build/generated/source/kaptKotlin/main')
    }
}
